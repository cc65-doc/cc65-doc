.Dd $Mdocdate$
.Dt AR65 1 URM
.Os 0.1.0
.Sh NAME
.Nm ar65
.Nd an archiver for object files generated by
.Xr ca65 1
.Sh SYNOPSIS
.Nm ar65
.Bk -words
.Op Fl rdtvV
.Op Ar lib
.Op Ar files
.Ek
.Sh DESCRIPTION
.Nm
is a utility to edit archives for cc65 programs:
it enables creating archives,
adding or removing modules from archives,
and extracting modules from existing archives.
.Sh OPERATIONS
.Bl -tag -width "xx"
.It r
Add modules
.Pp
You may add modules to a library using the
.Em r
command (using
.Em a
is deprecated).
If the library does not exist,
it is created (and a warning
message is printed which you may ignore
if creation of the library was your intention).
.Pp
You may specify any number of modules on the command line
following the library.  If a module with the same name
exists in the library, it is replaced by the new one.
The archiver prints a warning,
if the module in the library has a newer timestamp than the
one to add.
An example:
.Pp
.Dl ar65 r mysubs.lib sub1.o sub2.o
.Pp
This will add two modules to the library 'mysubs.lib',
creating the library if necessary.
If the library contains modules named sub1.o or sub2.o,
they are replaced by the new ones.
Modules names in the library are stored without the path,
so, using
.Pp
.Dl ar65 v v r mysubs.lib ofiles/sub1.o ofiles/sub2.o
.Pp
will verbosely add two modules named 'sub1.o' and 'sub2.o'
to the library.
.It d
Delete modules
.Pp
Deleting modules from a library is done with the
.Em d
command. You may not give a path when naming the modules.
.Pp
Example:
.Pp
.Dl ar65 d mysubs.lib sub1.o
.Pp
This will delete the module named 'sub1.o' from the library,
printing an error if the library does not contain that module.
.It t
List library table
.Pp
The
.Em t
command prints a table of all modules in the library ('l' is
deprecated).  Any module names on the command line are
ignored.
.Pp
Example:
.Pp
.Dl ar65 tv mysubs.lib
.Pp
.It v
Increase verbosity (put before other operations)
.It x
Extract modules
.Pp
Using the
.Em x
command , you may extract modules from the library.
The modules named on the command line are extracted
from the library and put into the current directory.
.Pp
.Em Note Ns:
Because of the indexing done by the archiver, the modules
may have a changed binary layout, that is, a binary compare
with the old module (before importing it into the library)
may yield differences.  The extracted modules are accepted
by the linker and archiver, however, so this is not a
problem.
.Pp
Example for extracting a module from the library:
.Pp
.Dl ar65 x mysubs.lib sub1.o
.Pp
In addition to these operations, the archiver will check
for, and warn about duplicate external symbols in the
library, every time when an operation does update the
library. This is only a warning, the linker will ignore one
of the duplicate symbols (which one is unspecified).
.It V
Print the archiver version
.El
.Sh AUTHORS
Program Author: Ullrich von Bassewitz <\fIwebmaster@von-bassewitz.de\fR>
.br
Manpage Author: Jake Grossman         <\fIjake.r.grossman@gmail.com\fR>
.Sh COPYRIGHT
ar65 (and all cc65 binutils) are (C) Copyright 1998-2000
Ullrich von Bassewitz and others. For usage of the binaries
and/or sources the following conditions do apply:
This software is provided 'as-is', without any expressed or
implied warranty. In no event will the authors be held
liable for any damages arising from the use of this
software.
Permission is granted to anyone to use this software for any
purpose, including commercial applications, and to alter it
and redistribute it freely, subject to the following
restrictions:
.Bl -enum
.It 1.
The origin of this software must not be misrepresented; you
must not claim that you wrote the original software. If you
use this software in a product, an acknowledgment in the
product documentation would be appreciated but is not
required.
.It 2.
Altered source versions must be plainly marked as such, and
must not be misrepresented as being the original software.
.It 3.
This notice may not be removed or altered from any source
distribution.
.El
.Sh SEE ALSO
.Xr cc65 1 ,
.Xr ca65 1
.\" vim: set ts=4 sts=4 sw=4 et tw=60 :
